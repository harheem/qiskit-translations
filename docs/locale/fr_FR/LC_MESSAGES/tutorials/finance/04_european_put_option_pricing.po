msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-10 19:20+0000\n"
"PO-Revision-Date: 2020-10-19 12:33\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/finance/04_european_put_option_pricing.po\n"
"X-Crowdin-File-ID: 9348\n"
"Language: fr_FR\n"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:10
msgid "This page was generated from `tutorials/finance/04_european_put_option_pricing.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/finance/04_european_put_option_pricing.ipynb`__."

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:9
msgid "**Pricing European Put Options**"
msgstr "** Tarification Options d'Achat Européenne * *"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:21
msgid "Introduction"
msgstr "Introduction"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:23
msgid "Suppose a European put option with strike price :math:`K` and an underlying asset whose spot price at maturity :math:`S_T` follows a given random distribution. The corresponding payoff function is defined as:"
msgstr "Supposons une option de vente européenne avec le prix d'exercice (strike) :math:`K` et un actif sous-jacent dont le prix spot à l'échéance :math:`S_T` suit une distribution aléatoire donnée. La fonction de paiement correspondante est définie comme :"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:25
msgid "\\max\\{K - S_T, 0\\}\n\n"
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:27
msgid "In the following, a quantum algorithm based on amplitude estimation is used to estimate the expected payoff, i.e., the fair price before discounting, for the option:"
msgstr "Dans ce qui suit, un algorithme quantique basé sur l'estimation d'amplitude est utilisé pour estimer le gain attendu, c'est-à-dire le juste prix avant remise, pour l'option :"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:29
msgid "\\mathbb{E}\\left[ \\max\\{K - S_T, 0\\} \\right]\n\n"
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:31
msgid "as well as the corresponding :math:`\\Delta`, i.e., the derivative of the option price with respect to the spot price, defined as:"
msgstr "ainsi que le :math:\"\\Delta\" correspondant, c'est-à-dire le dérivé du prix de l'option par rapport au prix au comptant, défini comme suit:"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:33
msgid "\\Delta = -\\mathbb{P}\\left[S_T \\leq K\\right]"
msgstr "\\Delta = -\\mathbb{P}\\left[S_T \\leq K\\right]"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:38
msgid "The approximation of the objective function and a general introduction to option pricing and risk analysis on quantum computers are given in the following papers:"
msgstr "L'approximation de la fonction objectif et une introduction générale à la tarification des options et à l'analyse des risques sur les ordinateurs quantiques sont données dans les articles suivants :"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:40
msgid "Quantum Risk Analysis. Woerner, Egger. 2018."
msgstr "Quantum Risk Analysis. Woerner, Egger. 2018."

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:41
msgid "Option Pricing using Quantum Computers. Stamatopoulos et al. 2019."
msgstr "Option Pricing using Quantum Computers. Stamatopoulos et al. 2019."

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:71
msgid "Uncertainty Model"
msgstr "Modèle d'Incertitude"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:73
msgid "We construct a circuit factory to load a log-normal random distribution into a quantum state. The distribution is truncated to a given interval :math:`[low, high]` and discretized using :math:`2^n` grid points, where :math:`n` denotes the number of qubits used. The unitary operator corresponding to the circuit factory implements the following:"
msgstr "Nous construisons une usine de circuits pour charger une distribution aléatoire en log-normal dans un état quantique. La distribution est tronquée à un intervalle donné :math:`[low, haut]` et discrédité en utilisant :math:`2^n` points de grille, où :math:`n` indique le nombre de qubits utilisés. L'opérateur unitaire correspondant à l'usine de circuit met en œuvre les éléments suivants :"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:75
msgid "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i=0}^{2^n-1} \\sqrt{p_i}\\big|i\\rangle_{n},\n\n"
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:77
msgid "where :math:`p_i` denote the probabilities corresponding to the truncated and discretized distribution and where :math:`i` is mapped to the right interval using the affine map:"
msgstr "où les :math:`p_i` représentent les probabilités de la distribution tronquée et discrétisée et où les :math:`i` sont mappés sur l'intervalle approprié en utilisant la carte affine suivante :"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:79
msgid "\\{0, \\ldots, 2^n-1\\} \\ni i \\mapsto \\frac{high - low}{2^n - 1} * i + low \\in [low, high].\n\n"
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:149
msgid "Payoff Function"
msgstr "Fonction de Paiement"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:151
msgid "The payoff function decreases linearly with an increasing spot price at maturity :math:`S_T` until it reaches zero for a spot price equal to the strike price :math:`K`, it stays constant to zero for larger spot prices. The implementation uses a comparator, that flips an ancilla qubit from :math:`\\big|0\\rangle` to :math:`\\big|1\\rangle` if :math:`S_T \\leq K`, and this ancilla is used to control the linear part of the payoff function."
msgstr "La fonction de paiement diminue linéairement avec une augmentation du prix spot à l'échéance de :math:`S_T` jusqu'à ce qu'elle atteigne zéro pour un prix spot égal au prix strike :math:`K`, Il reste constant à zéro pour des prix spot plus élevés. L'implémentation utilise un comparateur, qui retourne un qubit auxiliaire de :math:`\\big|0\\rangle` à :math:`\\big|1\\rangle` si :math:`S_T \\leq K`, et cet auxiliaire est utilisé pour contrôler la partie linéaire de la fonction de paiement."

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:153
msgid "The linear part itself is then approximated as follows. We exploit the fact that :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` for small :math:`|y|`. Thus, for a given approximation scaling factor :math:`c_{approx} \\in [0, 1]` and :math:`x \\in [0, 1]` we consider"
msgstr "La partie linéaire proprement dite est approximée de la façon suivante. On exploite le fait que :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` pour :math:`|y|` petit.\n"
"Ainsi, pour un facteur d'échelle d'approximation donné :math:`c_{approx} \\in [0, 1]` et :math:`x \\in [0, 1]` on considère"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:155
msgid "\\sin^2( \\pi/2 * c_{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_{approx} * ( x - 1/2 ) + 1/2\n\n"
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:157
msgid "for small :math:`c_{approx}`."
msgstr "pour de petits :math:`c_{approx}`."

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:159
msgid "We can easily construct an operator that acts as"
msgstr "Nous pouvons facilement construire un opérateur qui agit ainsi"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:161
msgid "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"
"using controlled Y-rotations."
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:165
msgid "Eventually, we are interested in the probability of measuring :math:`\\big|1\\rangle` in the last qubit, which corresponds to :math:`\\sin^2(a*x+b)`. Together with the approximation above, this allows to approximate the values of interest. The smaller we choose :math:`c_{approx}`, the better the approximation. However, since we are then estimating a property scaled by :math:`c_{approx}`, the number of evaluation qubits :math:`m` needs to be adjusted accordingly."
msgstr "Finalement, nous sommes intéressés par la probabilité de mesurer :math:`\\big|1\\rangle` dans le dernier qubit, ce qui correspond à :math:`\\sin^2(a*x+b)`. Avec l'approximation ci-dessus, cela permet d'approximer les valeurs d'intérêt. Plus nous choisissons de petite valeur :math:`c_{approx}`, mieux est la approximation. Cependant, puisque nous sommes en train d'estimer une propriété à l'échelle de :math:`c_{approx}`, le nombre de qubits d'évaluation :math:`m` doit être ajusté en conséquence."

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:167
msgid "For more details on the approximation, we refer to: Quantum Risk Analysis. Woerner, Egger. 2018."
msgstr "Pour plus de détails sur l'approximation, nous nous référons à: Quantum Risk Analysis. Woerner, Egger. 2018."

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:280
msgid "Evaluate Expected Payoff"
msgstr "Evaluer le paiement attendu"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:353
msgid "Evaluate Delta"
msgstr "Évaluer le Delta"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:355
msgid "The Delta is a bit simpler to evaluate than the expected payoff. Similarly to the expected payoff, we use a comparator circuit and an ancilla qubit to identify the cases where :math:`S_T \\leq K`. However, since we are only interested in the (negative) probability of this condition being true, we can directly use this ancilla qubit as the objective qubit in amplitude estimation without any further approximation."
msgstr "Le Delta est un peu plus simple à évaluer que la fonction de payement escomptée. De la même manière que les gains attendus, nous utilisons un circuit de comparateur et un qubit ancillaire pour identifier les cas où :math:`S_T \\leq K`. Cependant, comme nous ne sommes intéressés que par la probabilité (négative) que cette condition soit vraie, nous pouvons directement utiliser ce qubit auxiliaire comme le qubit objectif dans l'estimation d'amplitude sans approximation supplémentaire."

